# Copyright (c) @asmichi (https:\\github.com\asmichi). Licensed under the MIT License. See LICENCE in the project root for details.

#
# Variables
#

!if "$(SRCROOT)"==""
!ERROR SRCROOT must be specified
!endif
!if "$(OUTROOT)"==""
!ERROR OUTROOT must be specified
!endif
!if "$(RID)"==""
!error RID must be specified
!endif
!if "$(CONFIGURATION)"==""
CONFIGURATION = Release
!endif

LIBNAME = libNativeLib
SRCDIR = $(SRCROOT)\ #
OBJDIR = $(OUTROOT)\obj\NativeLib\$(RID)\$(CONFIGURATION)\ #
BINDIR = $(OUTROOT)\bin\NativeLib\$(RID)\$(CONFIGURATION)\ #

SRCS = $(SRCDIR)lib.c
OBJS = $(OBJDIR)lib.obj
PDB = $(BINDIR)$(LIBNAME).pdb

CFLAGS = /nologo /c /W3 /D _UNICODE /D UNICODE /Gm- /EHsc /GS /fp:precise /permissive- /Zc:wchar_t /Zc:forScope /Zc:inline
SYSTEM_LIBS = kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib
LDFLAGS_SHARED = /NOLOGO /MANIFEST /MANIFESTUAC:NO /manifest:embed /DEBUG /SUBSYSTEM:WINDOWS /TLBID:1 /DYNAMICBASE /NXCOMPAT /DLL

!if "$(RID)"=="win-x86"
CC = "$(VCTOOLSINSTALLDIR)bin\HostX86\x86\cl.exe"
LD = "$(VCTOOLSINSTALLDIR)bin\HostX86\x86\link.exe"
LDFLAGS_SHARED = $(LDFLAGS_SHARED) /MACHINE:X86 /SAFESEH
LIB = "$(VCTOOLSINSTALLDIR)lib\x86";$(WINDOWSSDKDIR)lib\$(WINDOWSSDKLIBVERSION)ucrt\x86;$(WINDOWSSDKDIR)lib\$(WINDOWSSDKLIBVERSION)um\x86
!elseif "$(RID)"=="win-x64"
CC = "$(VCTOOLSINSTALLDIR)bin\HostX86\x64\cl.exe"
LD = "$(VCTOOLSINSTALLDIR)bin\HostX86\x64\link.exe"
LDFLAGS_SHARED = $(LDFLAGS_SHARED) /MACHINE:X64
LIB = "$(VCTOOLSINSTALLDIR)lib\x64";$(WINDOWSSDKDIR)lib\$(WINDOWSSDKLIBVERSION)ucrt\x64;$(WINDOWSSDKDIR)lib\$(WINDOWSSDKLIBVERSION)um\x64
!else
!error Unknown RID: $(RID)
!endif

!if "$(CONFIGURATION)" == "Release"
CFLAGS = $(CFLAGS) /Zi /O2 /Oi /D NDEBUG /MD
LDFLAGS_SHARED = $(LDFLAGS_SHARED) /OPT:REF /OPT:ICF 
!elseif "$(CONFIGURATION)" == "Debug"
CFLAGS = $(CFLAGS) /Zi /Od /MDd /RTC1
!else
!error Unknown CONFIGURATION: $(CONFIGURATION)
!endif

#
# Targets
#
all: dir $(BINDIR)$(LIBNAME).dll
dir:
	@if not exist $(OBJDIR) mkdir $(OBJDIR)
	@if not exist $(BINDIR) mkdir $(BINDIR)

.SUFFIXES: .c .obj

{$(SRCDIR)}.c{$(OBJDIR)}.obj:
	$(CC) $(CFLAGS) /Fo$@ /Fd$(PDB) $<

$(BINDIR)$(LIBNAME).dll : $(OBJS) dir
	$(LD) $(LDFLAGS_SHARED) $(SYSTEM_LIBS) /OUT:$@ /PDB:$(PDB) $(OBJS)
